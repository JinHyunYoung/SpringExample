<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.myapp.dao.BoardDao">
    
    
    
    <insert id="insertContent" parameterType="java.util.HashMap">
      <selectKey resultType="String" keyProperty="vncRqMngNo" order="BEFORE">
         select ifnull(max(id),0) +1 from board;
      </selectKey>
        insert into board(
            subject,
            content,
            writer,
            grp,
            level,
            seq,
            no
            <!-- password -->
        )values(
            #{subject},
            #{content},
            #{writer},
            ${vncRqMngNo},
            1,
            1,
            0
            <!-- #{password} -->
        )
    </insert>
    <insert id="updateContent" parameterType="java.util.HashMap">
        update
            board
        set
            subject = #{subject},
            content = #{content},
            writer = #{writer},
            password = #{password}
        where
            id = #{id}
    </insert>
    <select id="selectContentCnt" resultType="int" parameterType="java.util.HashMap">
        select
            count(id)
        from
            board
        where
        	  1 =1 
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(subject)">
        and   subject = #{subject}
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(writer)">
        and   writer  =  #{writer} 
        </if>    
    </select>
    <select id="selectContent" resultType="Board" parameterType="java.util.HashMap">
        select
            id,
            subject,
            content,
            writer,
            level,
            date_format(register_datetime, '%Y-%m-%d %H:%i:%s') register_datetime
        from
            board
        where
        	  1 =1 
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(subject)">
        and   subject like concat('%',#{subject},'%') 
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(writer)">
        and   writer like concat('%',#{writer},'%')
        </if>     
        order by grp desc, no asc 
        <!-- order by grp desc,no,level asc -->
        limit #{start}, #{end}
    </select>
    <select id="selectContentView" resultType="com.spring.myapp.domain.Board" parameterType="java.util.HashMap">
        select
            id,
            subject,
            content,
            writer,
            date_format(register_datetime, '%Y-%m-%d %H:%i:%s') register_datetime
        from
            board
        where
            id = #{id}
    </select>
    <insert id="insertBoardReply" parameterType="java.util.HashMap" useGeneratedKeys="true" keyProperty="reply_id">
        insert into board_reply(
            board_id,
            parent_id,
            depth,
            reply_content,
            reply_writer,
            reply_password
        )values(
            #{board_id},
            #{parent_id},
            #{depth},
            #{reply_content},
            #{reply_writer},
            #{reply_password}
        )
    </insert>
    <select id="selectBoardReplyList" resultType="com.spring.myapp.domain.BoardReply" parameterType="java.util.HashMap">
        select
            reply_id,
            board_id,
            parent_id,
            depth,
            reply_content,
            reply_writer,
            reply_password
        from
            board_reply
        where
            board_id = #{id}
        order by reply_id asc
    </select>
    <delete id="deleteBoardReply" parameterType="java.util.HashMap">
    	delete
    	from
    		board_reply
    	where
    		reply_id = #{reply_id}
    		and reply_password = #{reply_password}
    </delete>
    <delete id="deleteBoardReplyAll" parameterType="java.util.HashMap">
    	delete
    	from
    		board_reply
    	where
    		reply_id in (
		    	select
		    		reply_id
		    	from
		    	(select
		    		reply_id
		    	from
		    		board_reply
		    	where
		    		reply_id = #{reply_id}
		    		and reply_password = #{reply_password}) a
    		) or parent_id in (
    			select
		    		reply_id
		    	from
		    	(select
		    		reply_id
		    	from
		    		board_reply
		    	where
		    		reply_id = #{reply_id}
		    		and reply_password = #{reply_password}) a
    		)
    </delete>
    <select id="selectBoardCnt" resultType="int" parameterType="java.util.HashMap">
        select
            count(id)
        from
            board
        where
            id = #{id}
            and password = #{password}
    </select>
    <delete id="deleteBoard" parameterType="java.util.HashMap">
        delete
        from
            board
        where
            id = #{id}
            and password = #{password}
    </delete>
    <select id="selectReplyPassword" resultType="int" parameterType="java.util.HashMap">
    	select
    		count(*)
    	from
    		board_reply
    	where
    		reply_id = #{reply_id}
    		and reply_password = #{reply_password}
    </select>
    <update id="updateReply" parameterType="java.util.HashMap">
    	update
		    board_reply
		set
		    parent_id = #{parent_id},
		    depth = #{depth},
		    reply_content = #{reply_content},
		    reply_writer = #{reply_writer},
		    reply_password = #{reply_password}
		where
		    reply_id = #{reply_id}
    </update>
    <select id="login" resultType="com.spring.myapp.dto.Member" parameterType="String">
    	select
    		*
    	from
    		member
    	where
    		u_id = #{u_id}
    </select>
    <select id="boarddata" resultType="Board" parameterType="int">
      select
        id,subject,level,grp as group_no,seq,no
      from
        Board
      where
        id = #{id}
       
    </select>
    <select id="select1" resultType="int" parameterType="String">
      select MAX(no) +1  from board  where grp = #{group_no}  ;
    </select>
    <insert id="comentssave" parameterType="Board">
        insert into board
        (subject,content,writer,grp,level,seq,no)
           values(
	            
	            #{subject},
	            #{content},
	            #{writer},
	            #{group_no},
	            #{level},
	            #{seq},
	            #{no}
	            
        )
    </insert>
</mapper>
 
